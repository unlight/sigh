{"version":3,"sources":["..\\..\\src\\plugin\\merge.js"],"names":[],"mappings":";;;;;;;;wBAAoB,UAAU;;;;wBACR,WAAW;;sBACnB,QAAQ;;;;iCAEY,sBAAsB;;AAExD,IAAI,gBAAgB,GAAG,GAAG,CAAA;;qBAEX,UAAS,EAAE,EAAgB;oCAAX,SAAS;AAAT,aAAS;;;;;AAGtC,SAAO,sBAAQ,MAAM,CACnB,SAAS,EACT,UAAC,OAAO,EAAE,QAAQ,EAAK;AACrB,WAAO,EAAE,CAAC,QAAQ,CAAC,OAAO,CAAC,QAAQ,EAAE,EAAE,CAAC,MAAM,IAAI,IAAI,CAAC,CACtD,IAAI,CAAC,UAAA,MAAM,EAAI;AACd,aAAO,CAAC,IAAI,CAAC,MAAM,CAAC,CAAA;AACpB,aAAO,OAAO,CAAA;KACf,CAAC,CAAA;GACH,EACD,EAAE,CACH,CACA,IAAI,CAAC,UAAA,OAAO;WAAI,gBAAM,QAAQ,CAAC,OAAO,CAAC,MAAM,CAAC,UAAA,MAAM;aAAI,MAAM,KAAK,EAAE,CAAC,QAAQ,CAAC,UAAU;KAAA,CAAC,CAAC;GAAA,CAAC,CAAA;CAC9F","file":"src/plugin/merge.js","sourcesContent":["import Promise from 'bluebird'\nimport { Bacon } from 'sigh-core'\nimport _ from 'lodash'\n\nimport { bufferingDebounce } from 'sigh-core/lib/stream'\n\nvar DEFAULT_DEBOUNCE = 200\n\nexport default function(op, ...pipelines) {\n  // Promise.map(..., { concurrency: 1 }) delivers the items to the iterator\n  // out of order which messes with opTreeIndex ordering.\n  return Promise.reduce(\n    pipelines,\n    (streams, pipeline) => {\n      return op.compiler.compile(pipeline, op.stream || null)\n      .then(stream => {\n        streams.push(stream)\n        return streams\n      })\n    },\n    []\n  )\n  .then(streams => Bacon.mergeAll(streams.filter(stream => stream !== op.compiler.initStream)))\n}\n"]}